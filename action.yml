apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: github-security-scan
inputs:
  token:
    required: true
  language:
    required: false
runs:
  using: composite
  steps:
    - id: run-orchestrator
      name: github-security-scan
      uses: docker://public.ecr.aws/l7o7z1g8/actions/github-security-sast-actions:main-529a494cc964660206d1c18d89bcd09b49bab497
      shell: bash
      env:
        CONFIG_JSON: '{\"metaInfo\":{\"url\":\"NA\",\"username\":\"NA\",\"password\":\"NA\",\"client_secret\":\"${{ inputs.token }}\",\"toolName\":\"githubsecurity\"},\"orchestratorInfo\":{\"language\":\"${{ inputs.language }}\",\"assetType\":\"CODE\",\"assetIdentifier\":\"${{ cloudbees.scm.repositoryUrl }}\",\"profileIdentifier\":\"${{ cloudbees.scm.branch }}\"},\"metaInformation\":{\"actor\":\SCM-Bot\",\"commitId\":\"${{ cloudbees.scm.sha }}\",\"scannerType\":\"SAST\"}}'
        RUN_ID: ${{ cloudbees.run_id }}
        STEP_ID: ${{ step.internal.id }}
        JOB_ID: ${{ job.id }}
        DNS_URL: ${{ cloudbees.api.url }}
        JWT_TOKEN: ${{ cloudbees.api.token }}
      run: |
        set -x
        echo "RUN ID: ${{ cloudbees.run_id }}"
        echo "Job ID: ${{ job.id }}"
        echo "Step ID: ${{ step.internal.id }}"
        cd /
        /bin/bash -c "java -jar ./executables/github-security.jar & while ! nc -z localhost 5001; do sleep 1; done && ./executables/orchestrator -scanConfig \"${CONFIG_JSON}\" execute-analyser && exit"
